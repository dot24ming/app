AddAdmin.php:		$adminInfoDao->startTransaction();
AddAdmin.php:		$ret = $adminInfoDao->addAdmin($username, $password, Tool_Const::$storeId);	
AddAdmin.php:				$adminInfoDao->rollback();
AddAdmin.php:				$adminInfoDao->rollback();	
AddAdmin.php:        $ret = $adminPermissionDao->addBatch($username, $permissionId);
AddAdmin.php:			$adminInfoDao->commit();
AddAdmin.php:			$adminInfoDao->rollback();
AddDepartment.php:		$ret = $departmentDao->addDepartment($name);
AddGoodsInfo.php:		$obj = $goodsInfoDao->getInfoBySerNum($serNum);	
AddGoodsInfo.php:		$newGoodsId = $goodsInfoDao->addGoodsInfo($name, $category, $info, $spec, $unit, $serNum, $superId);
AddServiceInfo.php:		$status = $mobileServicesDao->setInfo($serviceInfo);
AddService.php:		$ret = $serviceInfoDao->addService($superId, $departmentId, $serviceName, $unit, $costPrice, $referencePrice, $guaranteePeriod, $pilgrimageTime);	
AddServiceType.php:				$ret = $serviceTypeDao->addMap($type, $superId);	
AddStore.php:		$storeInfoDao->startTransaction();
AddStore.php:		$newStoreId = $storeInfoDao->addStore($storeName, $name, $telephone, 
AddStore.php:			$storeInfoDao->rollback();
AddStore.php:		$ret = $adminInfoDao->addAdmin($adminName, $password, $newStoreId);
AddStore.php:			$storeInfoDao->rollback();
AddStore.php:            	$ret = $storeInfoDao->query($sql);
AddStore.php:				$storeInfoDao->rollback();
AddStore.php:            	Bd_Log::warning($e->getMessage());
AddStore.php:		$ret = $adminPermission->addBatch($adminName, $permissions);
AddStore.php:		$storeInfoDao->commit();
AddSuper.php:		$ret = $serviceTypeDao->addSuper($superName);	
AddSupplier.php:			$result_select = $db_client->select(Tool_Util::getStoreTable('supplier_info'),'*','supplier_name="'.$supplier_name.'"',NULL,NULL);
AddSupplier.php:				return Tool_Util::returnJson($data,-1,'supplier name exit');
AddSupplier.php:				$result_insert = $db_client->insert(Tool_Util::getStoreTable('supplier_info'), $item_param);
AddSupplier.php:					return Tool_Util::returnJson($data,-1,'insert error');
AddSupplier.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
AddSupplier.php:	    //$tpl->display('yunyunche_odp/index.tpl');
AddUserRequirement.php:		$ret = $userRequirementDao->add($userId, $plateNumber, $requirement, Tool_Const::$adminInfo['id']);
AddWarehouse.php:		$ret = $warehouseInfoDao->addWarehouse($name);
AdminAuthorityList.php:		$infos = $adminPermissionDao->getAll();	
AdminAuthorityList.php:		$permissionInfos = $permissionInfoDao->getAll();
AdminAuthorityList.php:		$userInfos = $userInfoDao->getAll(Tool_Const::$storeId);
BrandList.php:		$brands = $carSeriesDao->getAllBrandInfo();
CheckAdminName.php:		$ret = $adminInfoDao->getAdminByUsername($username);
CheckClient.php:			$userInfo = $checkClientDao->getUserInfoByPhone($phoneNum);
CheckClient.php:				$carinfos = $checkClientDao->getInfoByOwnerId($userId);
CheckClient.php:			$carinfo = $checkClientDao->getInfoByPlateNumber($carNum);
CheckClient.php:			$carinfos = $checkClientDao->getInfoByOwnerId($ownerId);
CheckGoodsNumber.php:			$result_select = $db_client->select('goods_info','name','ser_num="'.$goods_number.'"',NULL,NULL);
CheckGoodsNumber.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
CheckGoodsNumber.php:	    //$tpl->display('yunyunche_odp/index.tpl');
ClientBusiness.php:		$offset = $arrInput['end'] - $arrInput['start'];
ClientBusiness.php:		$all_offset = $arrInput['end'] - 0;
ClientBusiness.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
ClientBusiness.php:		$select_count = $db_client->selectCount(Tool_Util::getStoreTable('package_card'),'user_id='.$arrInput['uid'],NULL,NULL);
ClientBusiness.php:			$result_package_buy = $db_client->select(Tool_Util::getStoreTable('package_card'),'*','user_id='.$arrInput['uid'],NULL,'ORDER BY active_date DESC '.$all_limit_str);
ClientBusiness.php:			$result_package_buy = $db_client->select(Tool_Util::getStoreTable('package_card'),'*','user_id='.$arrInput['uid'],NULL,'ORDER BY active_date DESC '.$limit_str);
ClientBusiness.php:			return Tool_Util::returnJson($data, -1, 'package business error');
ClientBusiness.php:		$select_count = $db_client->selectCount(Tool_Util::getStoreTable('member_recharge'),'uid='.$arrInput['uid'],NULL,NULL);
ClientBusiness.php:			$result_member_recharge = $db_client->select(Tool_Util::getStoreTable('member_recharge'),'*','uid='.$arrInput['uid'],NULL,'ORDER BY recharge_datetime DESC '.$all_limit_str);
ClientBusiness.php:			$result_member_recharge = $db_client->select(Tool_Util::getStoreTable('member_recharge'),'*','uid='.$arrInput['uid'],NULL,'ORDER BY recharge_datetime DESC '.$limit_str);
ClientBusiness.php:			return Tool_Util::returnJson($data, -1, 'member business error');
DelCar.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
DelCar.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
DelCar.php:	    //$tpl->display('yunyunche_odp/index.tpl');
DeleteAdmin.php:		$ret = $adminInfoDao->deleteAdmin($username);	
DeleteService.php:		$ret = $serviceInfoDao->deleteService($serviceId);	
DeleteServiceType.php:		$ret = $serviceTypeDao->deleteType($typeId);
DiscoverCustomer.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
DiscoverCustomer.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
DiscoverCustomer.php:	    $tpl->display('admin/page/discovercustomer.tpl');
Feedback.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
Feedback.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
Feedback.php:	    $tpl->display('yunyunche_odp/feedback.tpl');
FeedbackStat.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
FeedbackStat.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
FeedbackStat.php:	    //$tpl->display('yunyunche_odp/index.tpl');
GetBrand.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
GetBrand.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetBrand.php:	    //$tpl->display('yunyunche_odp/login.tpl');
GetCarSer.php:			$userInfo = $checkClientDao->getUserInfoByPhone($phoneNum);
GetCarSer.php:				$carinfos = $checkClientDao->getInfoByOwnerId($userId);
GetCarSer.php:			$carinfo = $checkClientDao->getInfoByPlateNumber($carNum);
GetCarSer.php:			$carinfos = $checkClientDao->getInfoByOwnerId($ownerId);
GetCategoryList.php:		$select_result = $db_client->select('goods_info','distinct(category)',NULL,NULL,NULL);
GetCategoryList.php:		$update_result = $db_client->update('model_mobile_service_form',$form_comment_update_param,' form_id='.$arrInput["form_id"],NULL,NULL);
GetCategoryList.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetCategoryList.php:	    //$tpl->display('yunyunche_odp/index.tpl');
GetCity.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
GetCity.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetCity.php:	    //$tpl->display('yunyunche_odp/login.tpl');
GetDistrict.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
GetDistrict.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetDistrict.php:	    //$tpl->display('yunyunche_odp/login.tpl');
GetProvince.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
GetProvince.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetProvince.php:	    //$tpl->display('yunyunche_odp/login.tpl');
GetSeries.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
GetSeries.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
GetSeries.php:	    //$tpl->display('yunyunche_odp/login.tpl');
GoodsInventoryDel.php:		$ret = $goodsInventoryDao->delete($inventoryId);
GoodsInventoryInfo.php:		$inventoryInfo = $goodsInventoryDao->getInfo($inventoryId);
GoodsInventoryInfo.php:		$goodsList = $goodsInventoryInfoDao->getInfo($inventoryId);
GoodsInventoryInfo.php:		$goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsInventoryList.php:		$list = $goodsInventoryDao->getList($start, $end, $total, $startDate, $endDate);
GoodsInventoryUpdate.php:		$goodsInventoryDao->startTransaction();
GoodsInventoryUpdate.php:		$ret = $goodsInventoryDao->update($inventoryId, $goodsInventoryDetail);
GoodsInventoryUpdate.php:			$goodsInventoryDao->rollback();
GoodsInventoryUpdate.php:		$goodsInfos = $goodsInventoryInfoDao->getInfo($inventoryId);
GoodsInventoryUpdate.php:			$ret = $goodsInventoryInfoDao->deleteItems($inventoryId, $delete);
GoodsInventoryUpdate.php:				$goodsInventoryInfoDao->rollback();
GoodsInventoryUpdate.php:			$ret = $goodsInventoryInfoDao->updateItems($inventoryId, $updateCond);
GoodsInventoryUpdate.php:				$goodsInventoryInfoDao->rollback();
GoodsInventoryUpdate.php:			$ret = $goodsInventoryInfoDao->addItems($storageId, $addCond);
GoodsInventoryUpdate.php:				$goodsInventoryInfoDao->rollback();
GoodsInventoryUpdate.php:		$goodsInventoryInfoDao->commit();
GoodsList.php:		$list = $goodsInfoDao->getList($category);
GoodsPurchaseInfo.php:		$purchaseInfo = $goodsPurchaseDao->getInfo($purchaseId);
GoodsPurchaseInfo.php:		$purchaseInfos = $goodsPurchaseInfoDao->getInfo($purchaseId);
GoodsPurchaseInfo.php:		$goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsPurchaseList.php:		$list = $goodsPurchaseDao->getList($start, $end, $total, $startDate, $endDate);
GoodsPurchaseUpdate.php:		$goodsPurchaseDao->startTransaction();
GoodsPurchaseUpdate.php:		$ret = $goodsShipmentDao->update($shipmentId, $goodsShipmentDetail);
GoodsPurchaseUpdate.php:			$goodsShipmentDao->rollback();
GoodsPurchaseUpdate.php:		$goodsInfos = $goodsShipmentInfoDao->getInfo($shipmentId);
GoodsPurchaseUpdate.php:			$ret = $goodsShipmentInfoDao->deleteItems($shipmentId, $delete);
GoodsPurchaseUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsPurchaseUpdate.php:			$ret = $goodsShipmentInfoDao->updateItems($shipmentId, $updateCond);
GoodsPurchaseUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsPurchaseUpdate.php:			$ret = $goodsShipmentInfoDao->addItems($shipmentId, $addCond);
GoodsPurchaseUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsPurchaseUpdate.php:		$goodsShipmentInfoDao->commit();
GoodsQuoteInfo.php:		$quoteDetail = $goodsQuoteDao->getInfo($quoteId);
GoodsQuoteInfo.php:		$quoteInfo = $goodsQuoteInfoDao->getInfo($quoteId);
GoodsQuoteInfo.php:		$goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsQuoteInfo.php:		$quoteInfos = $goodsQuoteDetailDao->getInfos($goodsIds, $quoteId);
GoodsQuoteInfo.php:		$suppliers = $supplierDao->getInfo();
GoodsQuoteList.php:		$goodsQuoteList = $goodsQuoteInfoDao->getList($start, $end, $total, $startDate, $endDate);
GoodsQuoteList.php:			$goodsInfo = $goodsInfoDao->getInfos($goods);
GoodsQuoteList.php:			$quoteInfo = $goodsQuoteDao->getInfos($quotes);
GoodsShipmentDel.php:		$ret = $goodsShipmentDao->delete($shipmentId);
GoodsShipmentInfo.php:		$shipmentDetail = $goodsShipmentDao->getInfo($shipmentId);
GoodsShipmentInfo.php:		$info = $goodsShipmentInfoDao->getInfo($shipmentId);
GoodsShipmentInfo.php:		$goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsShipmentList.php:		$list = $goodsShipmentDao->getList($start, $end, $total, $startDate, $endDate);
GoodsShipmentUpdate.php:		$goodsShipmentDao->startTransaction();
GoodsShipmentUpdate.php:		$ret = $goodsShipmentDao->update($shipmentId, $goodsShipmentDetail);
GoodsShipmentUpdate.php:			$goodsShipmentDao->rollback();
GoodsShipmentUpdate.php:		$goodsInfos = $goodsShipmentInfoDao->getInfo($shipmentId);
GoodsShipmentUpdate.php:			$ret = $goodsShipmentInfoDao->deleteItems($shipmentId, $delete);
GoodsShipmentUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsShipmentUpdate.php:			$ret = $goodsShipmentInfoDao->updateItems($shipmentId, $updateCond);
GoodsShipmentUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsShipmentUpdate.php:			$ret = $goodsShipmentInfoDao->addItems($shipmentId, $addCond);
GoodsShipmentUpdate.php:				$goodsShipmentInfoDao->rollback();
GoodsShipmentUpdate.php:		$goodsShipmentInfoDao->commit();
GoodsStorageDel.php:		$ret = $goodsStorageDao->delete($storageId);
GoodsStorageInfo.php:		$goodsStorageDetail = $goodsStorageDao->getInfo($storageId);
GoodsStorageInfo.php:		$goodsInfos = $goodsStorageInfoDao->getInfo($storageId);
GoodsStorageInfo.php:        $goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsStorageInfo.php:		$suppliers = $supplierInfoDao->getInfo();
GoodsStorageList.php:		$list = $goodsStorageDao->getList($start, $end, $total, $startDate, $endDate);
GoodsStorageUpdate.php:		$goodsStorageDao->startTransaction();
GoodsStorageUpdate.php:		$ret = $goodsStorageDao->update($storageId, $goodsStorageDetail);
GoodsStorageUpdate.php:			$goodsStorageDao->rollback();
GoodsStorageUpdate.php:		$goodsInfos = $goodsStorageInfoDao->getInfo($storageId);
GoodsStorageUpdate.php:			$ret = $goodsStorageInfoDao->deleteItems($storageId, $delete);
GoodsStorageUpdate.php:				$goodsStorageInfoDao->rollback();
GoodsStorageUpdate.php:			$ret = $goodsStorageInfoDao->updateItems($storageId, $updateCond);
GoodsStorageUpdate.php:				$goodsStorageInfoDao->rollback();
GoodsStorageUpdate.php:			$ret = $goodsStorageInfoDao->addItems($storageId, $addCond);
GoodsStorageUpdate.php:				$goodsStorageInfoDao->rollback();
GoodsStorageUpdate.php:		$goodsStorageInfoDao->commit();
GoodsTransferDel.php:		$ret = $goodsTransferDao->delete($transferId);
GoodsTransferInfo.php:		$transferInfo = $goodsTransferDao->getInfo($transferId);
GoodsTransferInfo.php:		$goodsTransferInfos = $goodsTransferInfoDao->getInfo($transferId);
GoodsTransferInfo.php:		$goodsInfos = $goodsInfoDao->getInfos($goodsIds);
GoodsTransferList.php:		$list = $goodsTransferDao->getList($start, $end, $total);
GoodsTransferUpdate.php:		$goodsTransferDao->startTransaction();
GoodsTransferUpdate.php:		$ret = $goodsTransferDao->update($transferId, $goodsTransferDetail);
GoodsTransferUpdate.php:			$goodsTransferDao->rollback();
GoodsTransferUpdate.php:		$goodsInfos = $goodsTransferInfoDao->getInfo($transferId);
GoodsTransferUpdate.php:			$ret = $goodsTransferInfoDao->deleteItems($transferId, $delete);
GoodsTransferUpdate.php:				$goodsTransferInfoDao->rollback();
GoodsTransferUpdate.php:			$ret = $goodsTransferInfoDao->updateItems($transferId, $updateCond);
GoodsTransferUpdate.php:				$goodsTransferInfoDao->rollback();
GoodsTransferUpdate.php:			$ret = $goodsTransferInfoDao->addItems($transferId, $addCond);
GoodsTransferUpdate.php:				$goodsTransferInfoDao->rollback();
GoodsTransferUpdate.php:		$goodsTransferInfoDao->commit();
InsCustomerEx.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
InsCustomerEx.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsCustomerEx.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsCustomer.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
InsCustomer.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsCustomer.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsInstock.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_instock($arrInput);
InsInstock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsInstock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsInventory.php:		$arrInput['sum_count'] = $arrInput['sum_inventory_count'] - $arrInput['sum_instock_count'];
InsInventory.php:		$arrInputItem['sum_count'] = $arrInputItem['inventory_count'] - $arrInputItem['instock_count'];
InsInventory.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_inventory($arrInput);
InsInventory.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsInventory.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsOutstock.php:		$arrInputItem['sum'] = ($arrInputItem['shipment_price'] - $arrInputItem['storage_price'] ) * $arrInputItem['count'];
InsOutstock.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_outstock($arrInput);
InsOutstock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsOutstock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsPurchase.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_purchase($arrInput);
InsPurchase.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsPurchase.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsQuote.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_quote($arrInput);
InsQuote.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsQuote.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsStore.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
InsStore.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsStore.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InStock.php:			$time = date('Y-m-d H:i:s');
InStock.php:			$select_result = $db_client->select('goods_storage','storage_status,time','storage_id='.$arrInput["form_id"],NULL,NULL);
InStock.php:				$time = date('Y-m-d H:i:s');
InStock.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
InStock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InStock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InsTransfer.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_transfer($arrInput);
InsTransfer.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InsTransfer.php:	    //$tpl->display('yunyunche_odp/index.tpl');
InventoryStock.php:			$time = date('Y-m-d H:i:s');
InventoryStock.php:			$select_result = $db_client->select('goods_inventory','inventory_status,time','inventory_id='.$arrInput["form_id"],NULL,NULL);
InventoryStock.php:				$time = date('Y-m-d H:i:s');
InventoryStock.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
InventoryStock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
InventoryStock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
Logcheck.php:		$arrPageInfo = $objServicePageLogcheckApi->execute($arrInput);
MatchCar.php:			return Tool_Util::returnJson($data,-1,'plate_number not exist');
MatchCar.php:		$select_result = $db_client->select(Tool_Util::getStoreTable('car_info'),'*',' plate_number like "%'.$arrInput["plate_number"].'%"',NULL,NULL);
MatchCar.php:				return Tool_Util::returnJson($select_result,-1,'false');
MatchCar.php:			return Tool_Util::returnJson($select_result,-1,'false');
MatchCar.php:		$update_result = $db_client->update('model_mobile_service_form',$form_comment_update_param,' form_id='.$arrInput["form_id"],NULL,NULL);
MatchCar.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
MatchCar.php:	    //$tpl->display('yunyunche_odp/index.tpl');
MatchGoods.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
MatchGoods.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
MatchGoods.php:	    //$tpl->display('yunyunche_odp/login.tpl');
MatchSupplier.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
MatchSupplier.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
MatchSupplier.php:	    //$tpl->display('yunyunche_odp/login.tpl');
MemberBuyBusiness.php:		$offset = $arrInput['end_idx'] - $arrInput['start_idx'];
MemberBuyBusiness.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
MemberBuyBusiness.php:		$result_member_recharge = $db_client->select(Tool_Util::getStoreTable('member_recharge'),'*','uid='.$arrInput['uid'],NULL,'ORDER BY recharge_datetime DESC '.$limit_str);
MemberBuyBusiness.php:		$result_package_buy = $db_client->select(Tool_Util::getStoreTable('package_card'),'*','user_id='.$arrInput['uid'],NULL,'ORDER BY active_date DESC '.$limit_str);
MemberBuyBusiness.php:			return Tool_Util::returnJson($data, -1, 'package business error');
MemberBuyBusiness.php:			return Tool_Util::returnJson($data, -1, 'member business error');
MemberCharge.php:		$arrInput['recharge_datetime'] = '2016-04-09 12:00:00';
MemberCharge.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
MemberCharge.php:			'recharge_datetime' => date('Y-m-d H:i:s',time()),
MemberCharge.php:		$result_select = $db_client->select(Tool_Util::getStoreTable('user_info'),'member_card_balance','user_id='.$arrInput['uid'],NULL,NULL);
MemberCharge.php:			$result_insert = $db_client->insert(Tool_Util::getStoreTable('member_recharge'),$param);
MemberCharge.php:				$result_update = $db_client->update(Tool_Util::getStoreTable('user_info'),$update_param,'user_id='.$arrInput['uid'],NULL,NULL);
MemberCharge.php:					return Tool_Util::returnJson($data,-2,'balance update error');
MemberCharge.php:				return Tool_Util::returnJson($data,-3,'recharge error');
MemberCharge.php:			return  Tool_Util::returnJson($data, -1, 'user not exist');
MemberComHistory.php:		$offset = $arrInput['end'] - $arrInput['start'];
MemberComHistory.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
MemberComHistory.php:		$select_count = $db_client->selectCount(Tool_Util::getStoreTable('mobile_service_form'),'user_id='.$arrInput['uid'].' and status=1',NULL,NULL);
MemberComHistory.php:		$member_com_select = $db_client->select(Tool_Util::getStoreTable('mobile_service_form'),'*','user_id='.$arrInput['uid'].' and status=1',NULL,'ORDER BY settlement_time DESC '.$limit_str);
MemberComHistory.php:				$service_detail_select = $db_client->select(Tool_Util::getStoreTable('mobile_service_form_info'),'*','form_id in ('.$form_id_str.')',NULL,NULL);
MemberComHistory.php:			return Tool_Util::returnJson($member_com_select,-1,'fail');
MobileCheckCarUser.php:			$userInfo = $checkUserDao->getUserInfoByPhone($phoneNum);
MobileCheckCarUser.php:			$carInfo = $checkCarDao->getInfoByOwnerId($userId);
MobileCheckCarUser.php:			$carInfo = $checkCarDao->getInfoByPlateNumber($plateNum);
MobileCheckCarUser.php:			$userInfo = $checkUserDao->getUserInfoByUserId($userId);
MobileGetEmployee.php:		$ret = $MobileEmployeeDao->getEmployee();
MobileGetSeries.php:		$carSeries = $carSeriesDao->getAllInfo();
MobileServiceFormLoad.php:		$serviceForms = $mobileServiceFormDao->getServiceFormByTime($plateNum, $timeStart, $timeEnd);
MobileServiceFormLoad.php:			$serviceFormInfos = $mobileServiceFormInfoDao->getServiceFormInfo($serviceForm['form_id']);
MobileServiceFormLoad.php:					$service = $mobileServicesDao->getInfoByType3Id($serviceId);
MobileServiceFormLoad.php:		$objPHPExcel->setActiveSheetIndex(0);
MobileServiceFormLoad.php:		$objPHPExcel->getActiveSheet()->setTitle('Simple');
MobileServiceFormLoad.php:			$objPHPExcel->getActiveSheet()->setCellValue($position, $rowName);
MobileServiceFormLoad.php:			$objPHPExcel->getActiveSheet()->getStyle($position)->getFill()->setFillType(PHPExcel_Style_Fill::FILL_SOLID);
MobileServiceFormLoad.php:			$objPHPExcel->getActiveSheet()->getStyle($position)->getFill()->getStartColor()->setARGB('FF808080');
MobileServiceFormLoad.php:				$objPHPExcel->getActiveSheet()->setCellValue($position, $record[$rowNameLink]);
MobileServiceFormLoad.php:		$objWriter->save($fileName);
MobileServiceFormLoad.php:		Header("Content-type: application/octet-stream");
MobileServiceFormLoad.php:		Header("Accept-Ranges: bytes");
MobileServiceFormLoad.php:		Header("Accept-Length: ".filesize($fileName));
MobileServiceFormLoad.php:		Header("Content-Disposition: attachment; filename=" . "form.xlsx");
MobileServiceForm.php:		$carinfo = $checkClientDao->getInfoByPlateNumber($plateNum);
MobileServiceFormSearch.php:			$formId = -1;
MobileServiceFormSearch.php:		if ($formId > -1){//优先用单号查询
MobileServiceFormSearch.php:			$serviceFormDB = $mobileServiceFormDao->getServiceFormById($formId);
MobileServiceFormSearch.php:			$serviceForms = $mobileServiceFormDao->getServiceFormByPlateNum($plateNum);
MobileServiceFormSearch.php:			$serviceForms = $mobileServiceFormDao->getServiceFormByTime($plateNum, $timeStart, $timeEnd);
MobileServiceFormSearch.php:			$serviceForms = $mobileServiceFormDao->getServiceFormByStatus($status);
MobileServiceFormSearch.php:			$serviceForms = $mobileServiceFormDao->getServiceFormBySettlement($settlement);
MobileServiceFormSearch.php:			$serviceForms = $mobileServiceFormDao->getServiceFormByTime($plateNum, $timeStart, $timeEnd);
MobileServiceFormSearch.php:			$carInfo = $carInfoDao->getInfoByPlateNumber($plateNum);
MobileServiceFormSearch.php:			$userInfo = $userInfoDao->getUserInfoByUserId($userId);
MobileServiceFormSearch.php:			$serviceFormInfos = $mobileServiceFormInfoDao->getServiceFormInfo($serviceForm['form_id']);
MobileServiceFormSearch.php:					$service = $mobileServicesDao->getInfoByType3Id($serviceId);
MobileServiceSearch.php:		$service = $mobileServicesDao->getServiceByType3Name($type3Name);
MobileServiceSelect.php:		$services = $mobileServicesDao->getServicesInfo();
MobileSetCarInfo.php:		$carInfos = $carInfoDao->getInfoByPlateNumber($plateNum);
MobileSetCarInfo.php:			$ret = $carInfoDao->setCarInfo($arr);
MobileSetCarInfo.php:			$ret = $carInfoDao->updateCarInfo($arr, $plateNum);
MobileSetUserInfo.php:		$UserId = $userInfoDao->setUserInfo($arr);
MobileSetUserInfo.php:		$ret = $carInfoDao->setCarInfo($arr);
MobileSubmitService.php:			$formId = -1;
MobileSubmitService.php:		$mobileServiceFormDao->startTransaction();
MobileSubmitService.php:			if ($ret == -2){
MobileSubmitService.php:		$carInfo = $carInfoDao->getInfoByPlateNumber($plateNumber);
MobileSubmitService.php:			   		'time' => date('y-m-d H:i:s',time()),
MobileSubmitService.php:			   		'time' => date('y-m-d H:i:s',time()),
MobileSubmitService.php:			   		'settlement_time' => date('y-m-d H:i:s',time()),
MobileSubmitService.php:			$formId = $mobileServiceFormDao->setServiceForm($arr);
MobileSubmitService.php:				$mobileServiceFormDao->rollback();
MobileSubmitService.php:					//$ret = self::handleMemCardInfo($plateNumber, -$settlementAmount);
MobileSubmitService.php:			   	'settlement_time' => date('y-m-d H:i:s',time()),
MobileSubmitService.php:			$ret = $mobileServiceFormDao->updateServiceForm($arr, $formId);
MobileSubmitService.php:				$mobileServiceFormInfoDao->deleteServiceFormInfo($formId);
MobileSubmitService.php:			//$mobileServiceFormInfoDao->deleteServiceFormInfo($formId);
MobileSubmitService.php:			//$mobileServiceFormDao->deleteServiceForm($formId);
MobileSubmitService.php:			$mobileServiceFormDao->rollback();
MobileSubmitService.php:		$mobileServiceFormDao->commit();
MobileSubmitService.php:			$admin_store_id = '新时速-美车汇';
MobileSubmitService.php:			$time = date('Y-m-d H:i:s');
MobileSubmitService.php:					$goods_select = $db_client->select('model_goods_info','*',' goods_id = '.$s_detail['service_id'],NULL,NULL);
MobileSubmitService.php:					$s_item['net_price'] = ($s_item['shipment_price'] - $s_item['storage_price'] ) * $s_item['count'];
MobileSubmitService.php:				$arrPageInfo = $objServicePageLogcheck->execute_ins_outstock_quick($outstock_param);
MobileSubmitService.php:					$result_update = $db_client->update('model_mobile_service_form',$quick_outstock_status_params,' form_id='.$formId,NULL,NULL);
MobileSubmitService.php:				$packageCardId = -1;
MobileSubmitService.php:			if ($done == 1 && $packageCardId > -1){
MobileSubmitService.php:			$ret = $mobileServiceFormInfoDao->setServiceFormInfo($form);
MobileSubmitService.php:				return -1;
MobileSubmitService.php:		$carInfo = $carInfoDao->getInfoByPlateNumber($plateNumber);
MobileSubmitService.php:			return -1;
MobileSubmitService.php:		$userInfo = $userInfoDao->getUserInfoByUserId($userId);
MobileSubmitService.php:			return -1;
MobileSubmitService.php:			return -2;
MobileSubmitService.php:		$memberCardBalance = $memberCardBalance - $settlementAmount;
MobileSubmitService.php:		$ret = $userInfoDao->updateUserInfo($fileds, $userId);
MobileSubmitService.php:		$packageCardInfo = $packageCardInfoDao->getPackageInfoByIdName($packageCardId, $serviceName);
MobileSubmitService.php:		$itemLeftCounts = $itemLeftCounts - 1;
MobileSubmitService.php:			return -1;
MobileSubmitService.php:		$ret = $packageCardInfoDao->setPackageInfoCounts($packageCardId, $serviceName, $itemLeftCounts);
MobileSubmitService.php:			return -1;
MobileSubmitService.php:		$userInfo = $userInfoDao->getUserInfoByUserId($userId);
MobileSubmitService.php:			return -1;
MobileSubmitService.php:			return -2;
MobileSubmitService.php:					"value" => date('y-m-d H:i:s',time()),
MobileSubmitService.php:			return -1;
MobileSubmitService.php:		$userInfo = $userInfoDao->getUserInfoByUserId($userId);
MobileSubmitService.php:			return -1;
MobileSubmitService.php:			return -2;
MobileSubSearch.php:			$services = $mobileServices->getServiceInType3Name($query, $num);
MobileSubSearch.php:			$goods = $goodsInfoDao->getInfosInName($query, $num);
ModCar.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
ModCar.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ModCar.php:	    //$tpl->display('yunyunche_odp/index.tpl');
ModCustomer.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
ModCustomer.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ModCustomer.php:	    //$tpl->display('yunyunche_odp/index.tpl');
ModifyAdminAuthority.php:		$admin = $adminInfoDao->getAdminByUsername($username);
ModifyAdminAuthority.php:		$adminPermissionDao->startTransaction();
ModifyAdminAuthority.php:		$ret = $adminPermissionDao->addBatch($username, $permissionId, 1);
ModifyAdminAuthority.php:			$adminPermissionDao->commit();
ModifyAdminAuthority.php:			$adminPermissionDao->rollback();
ModifyService.php:		$ret = $serviceInfoDao->updateService($serviceId, $superId, $departmentId, $serviceName, 
ModStoreStatus.php:		$arrPageInfo = $objServicePageLogcheck->modStatus($arrInput);
ModStoreStatus.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ModStoreStatus.php:	    //$tpl->display('yunyunche_odp/index.tpl');
OutstockDemandDetail.php:		//return Tool_Util::returnJson($data,-1,'form_type not exist');
OutstockDemandDetail.php:			return Tool_Util::returnJson($data,-1,'mobile table');
OutstockDemandDetail.php:			return Tool_Util::returnJson($data,-1,'form_id not exist');
OutstockDemandDetail.php:		$result_select = $db_client->select('model_mobile_service_form_info','*',' form_id='.$arrInput["form_id"],NULL,NULL);
OutstockDemandDetail.php:		//$result_select = $db_client->select('model_mobile_service_form_info','*',' form_id='.$arrInput["form_id"].' and type=1',NULL,NULL);
OutstockDemandDetail.php:			return Tool_Util::returnJson($data,-1,'form_id not exist');
OutstockDemandDetail.php:		$result_select = $db_client->select('model_mobile_service_form','*',' form_id='.$arrInput["form_id"],NULL,NULL);
OutstockDemandDetail.php:			$result_select_detail = $db_client->select('model_mobile_service_form_info','*',' form_id='.$form_id.' and type=1',NULL,NULL);
OutstockDemand.php:		//return Tool_Util::returnJson($data,-1,'form_type not exist');
OutstockDemand.php:			return Tool_Util::returnJson($data,-1,'mobile table');
OutstockDemand.php:		$offset = $end_idx - $start_idx;
OutstockDemand.php:		$result_select = $db_client->select('model_mobile_service_outstock_demand','*',NULL,NULL,'ORDER BY status, update_time DESC '.$limit_str);
OutstockDemand.php:			$result_select = $db_client->select('model_mobile_service_form','*',' form_id in ('.$id_list_str.')',NULL,'ORDER BY status,time DESC ');
OutstockDemand.php:		$select_count = $db_client->selectCount('model_mobile_service_form','form_id',NULL,NULL,NULL);
OutstockDemand.php:		$result_select = $db_client->select('model_mobile_service_form','*',' quick_outstock!=1',NULL,'ORDER BY verify_status,time DESC '.$limit_str);
OutstockDemand.php:			$car_result_select = $db_client->select('model_car_info','*',' plate_number in ('.$plate_number_str.')',NULL,NULL);
OutstockDemand.php:			$series_result_select = $db_client->select('car_series','*',' series_id in ('.$series_id_str.')',NULL,NULL);
OutstockDemand.php:			$form_info_result_select = $db_client->select('model_mobile_service_form_info','*',' form_id in ('.$form_id_str.') and type=1',NULL,NULL);
OutstockDemand.php:			return Tool_Util::returnJson($data,-1,'form_id not exist');
OutstockDemand.php:		$result_select = $db_client->select('model_mobile_service_form','*',' form_id='.$arrInput["form_id"],NULL,NULL);
OutstockDemand.php:			$result_select_detail = $db_client->select('model_mobile_service_form_info','*',' form_id='.$form_id.' and type=1',NULL,NULL);
OutstockDemandVerify.php:			return Tool_Util::returnJson($data,-1,'form_id not exist');
OutstockDemandVerify.php:				'verify_time' => date('Y-m-d H:i:s',time())
OutstockDemandVerify.php:		//$result_update = $db_client->update("model_mobile_service_outstock_demand",$param,' form_id='.$arrInput['form_id'],NULL,NULL);
OutstockDemandVerify.php:		$result_update = $db_client->update("model_mobile_service_form",$param,' form_id='.$arrInput['form_id'],NULL,NULL);
OutstockDemandVerify.php:			$result_select = $db_client->select("model_mobile_employee_apply","*",' id='.$arrInput['id'],NULL,NULL);
OutstockDemandVerify.php:					'update_time' => date('Y-m-d H:i:s',time())
OutstockDemandVerify.php:				$result_insert = $db_client->insert("model_mobile_employee",$param);
OutstockDemandVerify.php:						'update_time' => date('Y-m-d H:i:s',time())
OutstockDemandVerify.php:					$result_update = $db_client->update("model_mobile_employee_apply",$param,' id='.$arrInput['id'],NULL,NULL);
OutstockDemandVerify.php:					return Tool_Util::returnJson($data, -1, 'apply error');
OutstockDemandVerify.php:						'update_time' => date('Y-m-d H:i:s',time())
OutstockDemandVerify.php:					$result_update = $db_client->update("model_mobile_employee_apply",$param,' id='.$arrInput['id'],NULL,NULL);
OutstockDemandVerify.php:					return Tool_Util::returnJson($data, -1, 'apply error');
OutstockDemandVerify.php:			return Tool_Util::returnJson($data, -1, 'verify error');
OutStock.php:			$time = date('Y-m-d H:i:s');
OutStock.php:			$select_result = $db_client->select('goods_shipment','shipment_status,time','shipment_id='.$arrInput["form_id"],NULL,NULL);
OutStock.php:				$time = date('Y-m-d H:i:s');
OutStock.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
OutStock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
OutStock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
PackageAdd.php:			$userId = -1;
PackageAdd.php:		$packageDao->startTransaction();
PackageAdd.php:		$ret = $packageDao->addPackage($pack);
PackageAdd.php:			$packageDao->rollback();
PackageAdd.php:			$ret = $packageInfoDao->addPackageInfo($packInfo);
PackageAdd.php:				$packageDao->rollback();
PackageAdd.php:			$packageDao->rollback();
PackageAdd.php:			$packageDao->commit();
PackageBuyBusiness.php:		$offset = $arrInput['end_idx'] - $arrInput['start_idx'];
PackageBuyBusiness.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
PackageBuyBusiness.php:		//$result_member_recharge = $db_client->select(Tool_Util::getStoreTable('member_recharge'),'*','uid='.$arrInput['uid'],NULL,'ORDER BY recharge_datetime DESC '.$limit_str);
PackageBuyBusiness.php:		$result_package_buy = $db_client->select(Tool_Util::getStoreTable('package_card'),'*','user_id='.$arrInput['uid'],NULL,'ORDER BY active_date DESC '.$limit_str);
PackageBuyBusiness.php:			return Tool_Util::returnJson($data, -1, 'package business error');
PackageBuyBusiness.php:			return Tool_Util::returnJson($data, -1, 'member business error');
PackageCardAdd.php:		$packageInfoDao->startTransaction();
PackageCardAdd.php:			$packageNameDb = $packageDao->getPackageByCode($packageCode);
PackageCardAdd.php:			$pack['deadline'] = date('y-m-d h:i:s',time());
PackageCardAdd.php:			$pack['active_date'] = date('y-m-d h:i:s',time());
PackageCardAdd.php:			$cardId = $packageCardDao->addPackageCard($pack);
PackageCardAdd.php:				$packageInfoDao->rollback();
PackageCardAdd.php:			$packageInfos = $packageInfoDao->getPackageInfo($packageCode);
PackageCardAdd.php:				$ret = $packageCardInfoDao->addPackageCardInfo($packageCodeCardInfo);
PackageCardAdd.php:					$packageInfoDao->rollback();
PackageCardAdd.php:		$packageInfoDao->commit();
PackageCardAdd.php:		$pack['deadline'] = date('y-m-d h:i:s',time());
PackageCardAdd.php:		$pack['active_date'] = date('y-m-d h:i:s',time());
PackageCardAdd.php:		$ret = $packageDao->addPackageCard($pack);
PackageCardAdd.php:			$ret = $packageInfoDao->addPackageCardInfo($packInfo);
PackageCardSearch.php:			$packageCards = $packageCardDao->getPackageCardByUid($userId);
PackageCardSearch.php:				$packageCardInfo = $packageCardInfoDao->getPackageCardInfoByCardId($packageCard['package_card_id']);
PackageCardSearch.php:					//if ($packageCard['deadline'] > date('y-m-d h:i:s',time())) {
PackageCardSearch.php:			$packageCard = $packageCardDao->getPackageCardById($packageCardId);
PackageCardSearch.php:			$packageCardInfo = $packageCardInfoDao->getPackageCardInfoByCardId($packageCard['package_card_id']);
PackageComHistory.php:		$offset = $arrInput['end'] - $arrInput['start'];
PackageComHistory.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
PackageComHistory.php:		$all_form_id_select = $db_client->select(Tool_Util::getStoreTable('mobile_service_form'),'form_id','user_id='.$arrInput['uid'].' and status=1',NULL);
PackageComHistory.php:			$select_count = $db_client->selectCount(Tool_Util::getStoreTable('mobile_service_form_info'),'form_id in ('.$all_form_id_str.')',NULL,NULL);
PackageComHistory.php:		$member_com_select = $db_client->select(Tool_Util::getStoreTable('mobile_service_form'),'form_id,settlement_time,person,picker,plate_number','user_id='.$arrInput['uid'].' and status=1',NULL,'ORDER BY settlement_time DESC ');
PackageComHistory.php:				$select_count = $db_client->selectCount(Tool_Util::getStoreTable('mobile_service_form_info'),'form_id in ('.$form_id_str.')',NULL,NULL);
PackageComHistory.php:				$service_detail_select = $db_client->select(Tool_Util::getStoreTable('mobile_service_form_info'),'*','form_id in ('.$form_id_str.') and package_card_id>0',NULL,$limit_str);
PackageComHistory.php:			return Tool_Util::returnJson($member_com_select,-1,'fail');
PackageSearch.php:			$package = $packageDao->getPackageByCode($packageCode);
PackageSearch.php:			$packageInfo = $packageInfoDao->getPackageInfo($packageCode);
PackageSearch.php:			$package = $packageDao->getPackageByName($packageName);
PackageSearch.php:			$packageInfo = $packageInfoDao->getPackageInfo($package[0]['package_code']);
PackageSearch.php:			$packages = $packageDao->getPackage();
PackageSearch.php:				$packageInfo = $packageInfoDao->getPackageInfo($package['package_code']);
Purchase.php:			$time = date('Y-m-d H:i:s');
Purchase.php:			$select_result = $db_client->select('goods_purchase','purchase_status,time','purchase_id='.$arrInput["form_id"],NULL,NULL);
Purchase.php:				$time = date('Y-m-d H:i:s');
Purchase.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
Purchase.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
Purchase.php:	    //$tpl->display('yunyunche_odp/index.tpl');
QueryOwnerByCarNum.php:		$carInfo = $carInfoDao->getInfoByPlateNumber($carNum);
QueryOwnerByCarNum.php:		$userInfos = $userInfoDao->getUserInfoByUserIds($userIds);
QueryOwnerByCarNum.php:        $seriesInfo = $series->getInfoBySeries($seriesId);
QueryOwnerByCar.php:		$seriesInfo = $series->getInfoBySeries($seriesId);
QueryOwnerByCar.php:		$carInfos = $carInfoDao->getInfoBySeriesId($seriesId, $start, $end, $total);
QueryOwnerByCar.php:		$userInfos = $userInfo->getUserInfoByUserIds($userIds);
QueryOwnerByCharge.php:		$startday = str_replace($arrInput['startday'], '-', '');
QueryOwnerByCharge.php:		$endday = str_replace($arrInput['endday'], '-', '');
QueryOwnerByCharge.php:		$maintenanceInfos = $maintenanceInfoDao->
QueryOwnerByCharge.php:		$userInfos = $userInfoDao->getUserInfoByUserIds($userIds);
QueryOwnerByService.php:		$serviceInfo = $serviceInfoDao->getInfoById($serviceId);
QueryOwnerByService.php:		$maintenanceIds = $maintenanceServiceDao->getMaintenanceIdByServiceId($serviceId);
QueryOwnerByService.php:		$infos = $maintenanceInfoDao->
QueryOwnerByService.php:		$userInfos = $userInfoDao->getUserInfoByUserIds($userIds);
QueryService.php:		$services = $serviceInfoDao->search($serviceTypeId, $departmentId, $serviceName, $start, $end, $total);	
QueryService.php:			$typeInfoList = $serviceTypeDao->getAllType();
QueryService.php:			$superInfoList = $serviceTypeDao->getParent();
QueryServiceType.php:		$parent = $serviceTypeDao->getInfoById($superId);
QueryServiceType.php:		$children = $serviceTypeDao->getChild($superId, $start, $end, &$total);	
QuickServiceFormSearch.php:			$sampleServiceFormInfos = $sampleServiceFormDao->getSampleServiceForm();
QuickServiceFormSearch.php:		$sampleServiceFormInfo = $sampleServiceFormDao->getSampleServiceFormByName($sampleServiceName);
QuickStock.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_instock($arrInput);
QuickStock.php:		$arrPageInfo = $objServicePageLogcheck->execute_ins_outstock($arrInput);
QuickStock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
QuickStock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
Quote.php:			$time = date('Y-m-d H:i:s');
Quote.php:			$select_result = $db_client->select('goods_quote','quote_status,time','quote_id='.$arrInput["form_id"],NULL,NULL);
Quote.php:				$time = date('Y-m-d H:i:s');
Quote.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
Quote.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
Quote.php:	    //$tpl->display('yunyunche_odp/index.tpl');
RelateMyCar.php:			return Tool_Util::returnJson($data,-1,'wechat_num not exist');
RelateMyCar.php:			return Tool_Util::returnJson($data,-1,'phone_num not exist');
RelateMyCar.php:			return Tool_Util::returnJson($data,-1,'plate_num not exist');
RelateMyCar.php:		$car_select_result = $db_client->select("model_car_info",'*',$car_select_param,NULL,NULL);
RelateMyCar.php:					'review_time' => date('Y-m-d H:i:s'),
RelateMyCar.php:			$result_select = $db_client->update($table_name,$update_param,$update_conds_param);
RelateMyCar.php:			return Tool_Util::returnJson($form_type,-1,'form_type not exists');
RelateMyCar.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
RelateMyCar.php:	    //$tpl->display('yunyunche_odp/index.tpl');
ReportBalanceSearchLoad.php:			$timeStart = date('y-m',time());
ReportBalanceSearchLoad.php:			$timeEnd = date('y-m-d h:i:s',time());
ReportBalanceSearchLoad.php:		$packageCards = $packageCardDao->getPackageCardByTime($timeStart, $timeEnd);
ReportBalanceSearchLoad.php:			return -1;
ReportBalanceSearchLoad.php:			$carInfo = $carInfoDao->getInfoByOwnerId($userId);
ReportBalanceSearchLoad.php:		$memberRechargeInfos = $memberRechargeDao->getInfoByTime($timeStart, $timeEnd);
ReportBalanceSearchLoad.php:			$userInfo = $userInfoDao->getUserInfoByUserId($userId);
ReportBalanceSearchLoad.php:			$carInfo = $carInfoDao->getInfoByOwnerId($userId);
ReportBalanceSearchLoad.php:		$goodsStorageInfos = $goodsStorageInfoDao->getStorageInfoByTime($timeStart, $timeEnd);
ReportBalanceSearchLoad.php:			$goodsInfo = $goodsInfoDao->getInfo($goodsId);
ReportBalanceSearchLoad.php:			$supplierInfo = $supplierInfoDao->getSupplierInfo($supplierId);
ReportBalanceSearchLoad.php:			$goodsStorage = $goodsStorageDao->getInfo($storageId);
ReportBalanceSearchLoad.php:		//$goodsStorageInfos = $goodsStorageInfoDao->getStorageInfoByTime($timeStart, $timeEnd);
ReportBalanceSearchLoad.php:		$goodsShipmentInfos = $goodsShipmentInfoDao->getShipmentInfoByTime($timeStart, $timeEnd);
ReportBalanceSearchLoad.php:			$goodsInfo = $goodsInfoDao->getInfo($goodsId);
ReportBalanceSearchLoad.php:			//$supplierInfo = $supplierInfoDao->getSupplierInfo($supplierId);
ReportBalanceSearchLoad.php:			//$goodsStorage = $goodsStorageDao->getInfo($storageId);
ReportBalanceSearchLoad.php:			$goodsShipment = $goodsShipmentDao->getInfo($shipmentId);
ReportBalanceSearch.php:			$timeStart = date('y-m',time());
ReportBalanceSearch.php:			$timeEnd = date('y-m-d h:i:s',time());
ReportBalanceSearch.php:		$packageCards = $packageCardDao->getPackageCardByTime($timeStart, $timeEnd);
ReportBalanceSearch.php:			$carInfo = $carInfoDao->getInfoByOwnerId($userId);
ReportBalanceSearch.php:		$memberRechargeInfos = $memberRechargeDao->getInfoByTime($timeStart, $timeEnd);
ReportBalanceSearch.php:			$userInfo = $userInfoDao->getUserInfoByUserId($userId);
ReportBalanceSearch.php:			$carInfo = $carInfoDao->getInfoByOwnerId($userId);
ReportBalanceSearch.php:		//$goodsStorageInfos = $goodsStorageInfoDao->getStorageInfoByTime($timeStart, $timeEnd);
ReportBalanceSearch.php:		$goodsShipmentInfos = $goodsShipmentInfoDao->getShipmentInfoByTime($timeStart, $timeEnd);
ReportBalanceSearch.php:			$goodsInfo = $goodsInfoDao->getInfo($goodsId);
ReportBalanceSearch.php:			//$supplierInfo = $supplierInfoDao->getSupplierInfo($supplierId);
ReportBalanceSearch.php:			//$goodsStorage = $goodsStorageDao->getInfo($storageId);
ReportBalanceSearch.php:			$goodsShipment = $goodsShipmentDao->getInfo($shipmentId);
ReportBalanceSearch.php:		$len = $end - $start;
ReportSearchLoad.php:			$timeStart = date('y-m',time());
ReportSearchLoad.php:			$timeEnd = date('y-m-d H:i:s',time());
ReportSearchLoad.php:		$serviceForms = $mobileServiceFormDao->getServiceFormByTime("", $timeStart, $timeEnd);
ReportSearchLoad.php:			$carInfo = $carInfoDao->getInfoByPlateNumber($plateNum);
ReportSearchLoad.php:			$userInfo = $userInfoDao->getUserInfoByUserId($userId);
ReportSearchLoad.php:			$serviceFormInfos = $mobileServiceFormInfoDao->getServiceFormInfo($formId);
ReportSearch.php:			$timeStart = date('y-m',time());
ReportSearch.php:			$timeEnd = date('y-m-d h:i:s',time());
ReportSearch.php:		$serviceForms = $mobileServiceFormDao->getServiceFormByTime("", $timeStart, $timeEnd);
ReportSearch.php:			$carInfo = $carInfoDao->getInfoByPlateNumber($plateNum);
ReportSearch.php:			$userInfo = $userInfoDao->getUserInfoByUserId($userId);
ReportSearch.php:			$serviceFormInfos = $mobileServiceFormInfoDao->getServiceFormInfo($formId);
ReportSearch.php:		$len = $end - $start;
SearchCustomer.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
SearchCustomer.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
SearchCustomer.php:	    $tpl->display('admin/page/searchcustomer.tpl');
SearchMessage.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
SearchMessage.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
SearchMessage.php:	    $tpl->display('admin/page/searchmsg.tpl');
SelCustomer.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
SelCustomer.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
SelCustomer.php:	    //$tpl->display('yunyunche_odp/index.tpl');
SelMessage.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
SelMessage.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
SelMessage.php:	    //$tpl->display('yunyunche_odp/index.tpl');
SelStore.php:		$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
SelStore.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
SelStore.php:	    //$tpl->display('yunyunche_odp/index.tpl');
SelUser.php:		//$arrPageInfo = $objServicePageLogcheck->execute($arrInput);
SelUser.php:		$arrPageInfo = $objServicePageLogcheck->execute_l($arrInput);
SelUser.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
SelUser.php:	    //$tpl->display('yunyunche_odp/index.tpl');
SendPhoneMessage.php:				$daoPushHistory->addRecord($number, $content, Tool_Const::$tab_type_map[$type]);				
SeriesList.php:		$series = $carSeriesDao->getSeriesInfoByName($name);
ServiceformAddGetCate.php:		$arrPageInfo = $objServicePageServiceformAddGetCate->execute($arrInput);
ServiceformAddGetCate.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ServiceformAddGetCate.php:	    //$tpl->assign('arrOutput', $name);
ServiceformAddGetCate.php:	    //$tpl->display('yunyunche_odp/serviceformadd.tpl');
ServiceformAddGetName.php:		$arrPageInfo = $objServicePageServiceformAdd->execute($arrInput);
ServiceformAddGetName.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ServiceformAddGetName.php:	    $tpl->assign('arrOutput', $name);
ServiceformAddGetName.php:	    $tpl->display('yunyunche_odp/serviceformadd.tpl');
ServiceformAddSubmit.php:		$arrPageInfo = $objServicePageServiceformAdd->execute($arrInput);
ServiceformAddSubmit.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ServiceformAddSubmit.php:	    //$tpl->assign('arrOutput', $name);
ServiceformAddSubmit.php:	    //$tpl->display('yunyunche_odp/serviceformadd.tpl');
ServiceformSearch.php:		$arrPageInfo = $objServicePageServiceformSearch->execute($arrInput);
ServiceformSearch.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ServiceformSearch.php:	    //$tpl->display('yunyunche_odp/serviceformsearch.tpl');
ServiceList.php:		$departments = $department->getDepartmentInfo();
ServiceList.php:		$children = $serviceType->getAllType();
ServiceList.php:			$parents = $serviceType->getParent();
ServiceList.php:		$parents = $serviceType->getParent();
ServicemenuSearch.php:		$arrPageInfo = $objServicePageServiceformSearch->execute($arrInput);
ServicemenuSearch.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
ServicemenuSearch.php:	    //$tpl->display('yunyunche_odp/serviceformsearch.tpl');
SupplierInfo.php:		$info = $supplierDao->getSupplierInfo($supplierId);
SupplierList.php:		$list = $supplierDao->getInfo();
SupplierUpdate.php:		$ret = $supplierDao->updateSupplierInfo($supplierId, $supplierName, $info, $address, $phone, $linkman);
Template_wuweijia.php:			//return Tool_Util::returnJson($data,-1,'name not exist');
Template_wuweijia.php:		$result_select = $db_client->select('model_mobile_employee_apply','*',NULL,NULL,'ORDER BY apply_status, apply_time DESC ');
Template_wuweijia.php:			return Tool_Util::returnJson($data, -1, 'apply error');
TrackCarValid.php:		$arrPageInfo = $objServicePageLogin->trackCarValid($arrInput);
TrackCarValid.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackCarValid.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TrackCustomer.php:		$arrPageInfo = $objServicePageLogin->execute($arrInput);
TrackCustomer.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackCustomer.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TrackInsurance.php:		$arrPageInfo = $objServicePageLogin->trackInsurance($arrInput);
TrackInsurance.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackInsurance.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TrackPeccancy.php:		$arrPageInfo = $objServicePageLogin->trackPeccancy($arrInput);
TrackPeccancy.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackPeccancy.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TrackSale.php:		$arrPageInfo = $objServicePageLogin->trackSale($arrInput);
TrackSale.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackSale.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TrackUserValid.php:		$arrPageInfo = $objServicePageLogin->trackUserValid($arrInput);
TrackUserValid.php:	    $tpl->assign('arrOutput',$arrOutput['data']);
TrackUserValid.php:	    $tpl->display('yunyunche_odp/discover_customer.tpl');
TransferStock.php:			$time = date('Y-m-d H:i:s');
TransferStock.php:			$select_result = $db_client->select('goods_transfer','transfer_status,time','transfer_id='.$arrInput["form_id"],NULL,NULL);
TransferStock.php:				$time = date('Y-m-d H:i:s');
TransferStock.php:		$select_result = $db_client->select('store_info','name',' store_id='.$admin_store_id,NULL,NULL);
TransferStock.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
TransferStock.php:	    //$tpl->display('yunyunche_odp/index.tpl');
UpdateService.php:		$ret = $serviceInfoDao->updateService($serviceId, $serviceTypeId, $departmentId, $serviceName);	
Verify.php:			return Tool_Util::returnJson($data,-1,'form_type not exist');
Verify.php:			return Tool_Util::returnJson($data,-1,'form_id not exist');
Verify.php:			return Tool_Util::returnJson($data,-1,'type not exist');
Verify.php:					'review_time' => date('Y-m-d H:i:s'),
Verify.php:			$result_select = $db_client->update($table_name,$update_param,$update_conds_param);
Verify.php:			return Tool_Util::returnJson($form_type,-1,'form_type not exists');
Verify.php:			$result_select = $db_client->select('supplier_info','*','supplier_name="'.$supplier_name.'"',NULL,NULL);
Verify.php:				return Tool_Util::returnJson($data,-1,'supplier name exit');
Verify.php:				$result_insert = $db_client->insert('supplier_info',$item_param);
Verify.php:					return Tool_Util::returnJson($data,-1,'insert error');
Verify.php:	    //$tpl->assign('arrOutput',$arrOutput['data']);
Verify.php:	    //$tpl->display('yunyunche_odp/index.tpl');
WarehouseList.php:		$ret = $warehouseInfoDao->getInfo();
